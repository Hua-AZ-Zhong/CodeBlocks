二维数组可以把变量进行分组管理，二维数组
使用的时候需要两个下标，前一个下标是组下标，
后一个下标是组内下标。

函数代表了一段处理过程，由一组语句构成。可以
使用函数对程序代码进行分组。函数之间通过互相
调用一起协作完成功能。函数的语法格式如下
返回值类型  函数名称(形参) {
     组成函数的语句
}

声明函数的时候在小括号内部声明的变量叫做函数
的形参,在调用函数的时候形参的数值是调用函数
决定的。调用函数在调用的时候指定的数据叫做
实参。形参和实参不是一回事，对形参的修改不会
影响实参。

返回值类型如果省略缺省按照int处理，如果函数
没有返回值则返回值类型用void表示。

如果函数有返回值，但是没有使用return语句明确
指定返回值的数值则可能返回任何数字。

gcc在编译程序的时候如果先看到函数调用则会
按照如下格式猜测函数的格式
int 函数名();
这个格式表示返回值是一个整数而参数任意。如果
函数的实际格式和猜测的格式不一致就会导致
编译失败。

在单独声明一个函数的时候如果省略所有形参则
调用时提供的实参不一定能被正确的处理，因此
可能导致函数执行的失败。

如果声明函数的时候希望明确表示没有任何参数
则可以用void来代替形参。

使用数组做参数可以在调用函数和被调用函数
之间共享数组中的所有变量。

如果使用数组作为函数的参数又不希望被调用函数
修改数组中变量的数值则可以在数组参数的类型
前面加上关键字const。








