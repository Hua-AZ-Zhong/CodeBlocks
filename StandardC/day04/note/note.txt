for语句也可以用来描述一个数字列举过程，
语法如下
int xun_huan = 0;
for (xun_huan = 某个边界值;xun_huan没有超过另一个边界值;xun_huan向另一个边界值逼近) {
    对每个数据处理的代码
}

while语句也可以实现循环的效果，for语句和
while语句是可以互相转换的。while语句只需要
指定循环继续执行的条件就可以了。

do...while语法也可以实现循环的效果，它和while
语法的区别是先做事然后再进行逻辑判断。

for (xun_huan = 0; xun_huan < 3; xun_huan++);
while (xun_huan < 3);
以上两个循环叫做空语句循环，他们只做循环别的
什么都不干。

for(;;) {
    ....
}
while (1) {
    ....
}
以上两种写法叫做死循环，他们使用使用break;语句
来终止。

scanf函数读取数据的过程
键盘-->键盘缓冲区-->输入缓冲区-->程序变量
输入缓冲区内部的数据只有被读走以后才会被清理，
所以如果输入缓冲区中的数据和scanf函数所需要的
格式不匹配的时候就会导致后面的所有读取操作都
失败。
scanf("%*[^\n]");这条语句可以把输入缓冲区中
下一个回车符之前的所有内容清理掉
scanf("%*c");这条语句可以把输入缓冲区中下一个
回车字符清理掉

printf函数输出数据的过程
程序-->输出缓冲区-->屏幕
输出缓冲区数据显示在屏幕上的条件：
1.遇到\n
2.函数结束了
3.输出缓冲区满了
4.使用fflush(stdout)语句强制把输出缓冲区
   的内容显示在屏幕上

数组由一组相同类型的变量构成，声明数组的
语法如下：
int shu_zi[3];
其中shu_zi表示数组的名称，int表示数组中所有
变量的类型，3表示数组中变量的个数。

可以使用数组名称加上一个数字编号（下标）来
表示数组中的某个变量，例如shu_zi[0]。数组
下标的范围是从0开始到个数减一为止。超过范围
的下标不可以使用，否则结果不确定。

C99规范中支持变长数组，也就是编写代码的时候
不知道变量个数的数组。声明这种数组的时候可以
使用一个变量来表示数组中变量的个数。





