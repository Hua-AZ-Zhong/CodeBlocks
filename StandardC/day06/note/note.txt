自己会调用自己的函数叫做递归函数，很多递归
函数可以用循环的方法实现同样的效果，这样的
循环叫做递推。

声明在函数外边的变量叫做全局变量，声明在函数
中的变量叫做局部变量，声明在if，for等语句块
内部的变量叫做块变量。

变量的生命周期指的是变量有效的时间范围，变量
的作用域指的是变量在什么代码范围内可以使用。

全局变量的生命周期是整个程序运行期间，全局
变量的作用域包括所有代码。

局部变量的生命周期是声明它的那个函数的运行
时间段，局部变量的作用域是声明它的那个函数
内部的代码范围。

块变量的生命周期是声明它的那个语句块的运行
时间段，作用域是声明它的那个语句块中的所有
语句。

不同层次的变量可以使用相同的名称，在这种
情况下某一条语句使用的变量是它可以使用的
变量中声明语句离它最近的那个变量。

声明局部变量的时候可以在数据类型前面加上
关键字static，这种变量叫做静态局部变量。
他的生命周期是整个应用程序运行时间范围。

没有初始化的全局变量的数字自动被设置成0.

栈代表一组变量，可以向里面设置数据也可以
从里面获得数据，设置数据的顺序和获得数据
的顺序相反。

sleep函数可以把程序暂停指定的秒数，等时间
过了以后再继续执行。暂停的时间并不精确，
会有一些误差。

程序在内存中运行的时候是分段存储的，不同段落
的内容作用不同。所有的程序语句都被放置在代码
段（程序段）中，这个段落中的内容在运行的时候
是不可以被修改的。栈表示程序运行过程中的一个
段落，这个段落是用来存储数据的。局部变量，
参数都被放置在栈中。堆也是程序运行过程中的
一个段落，这个段落也是用来存储数据的。堆
中变量的生命周期是由程序管理的。

auto关键字可以用来声明变量，非静态的局部变量
都是auto变量。语法如下
auto int shu_zi = 4;

static关键字可以用来声明一个局部变量，这种
局部变量叫做静态局部变量，它的生命周期是整个
程序运行时间段。这个关键字也可以用来声明全局
变量，这种静态全局变量的作用域是声明它的
那个文件内部。

register关键字也可以用来声明变量。这种变量
叫做寄存器变量，这种变量会被保存在寄存器里，
它的使用速度最快，但是会导致其他变量的
使用速度变慢。一般不应该使用这个关键字。
编译器决定寄存器变量是否被放置在寄存器里。

volatile关键字也可以用来声明变量，这种变量
叫做易变变量。程序中每次使用这种变量的时候
都必须从内存中获得他们的数据。

const关键字也可以用来声明变量，这种变量
是不可以被赋值的它只能通过初始化得到数据.








