预处理指令#define可以用来给固定数字起名字，
这些名字通称为宏，这样的预处理指令叫做宏
定义指令，格式如下
#define   PI          3.14f
在程序中宏会被gcc替换为对应的数字，然后才会
开始编译。

条件编译指的是gcc在编译程序的时候根据预处理的
结果把某些处理代码保留而把另外一些处理代码丢弃
的效果。条件编译语法如下
#ifdef
#else
#endif
这三条语句可以把代码分成两部分，基于前面的宏
定义情况在这两部分代码中进行取舍。
使用如下的预处理指令可以实现更复杂的条件
编译情况
#if
#elif
#else
#endif

gcc 工具可以对每个.c源文件单独进行编译工作。
命令如下
gcc -c 文件名
编译成功后得到一个以.o作为扩展名的目标文件。
当所有目标文件都得到后可以使用gcc命令把他们
合并成最终的可执行文件。

把多个源文件中需要共享的内容转移到一个以.h作为
扩展名的头文件中并在有需要的源文件中使用语句
#include "文件名"
包括这个头文件。头文件中要使用条件编译避免
被同一个源文件多次包含。

多文件程序中共享全局变量则必须在其中一个
源文件中包含变量声明，而在其他源文件中使用
如下方式声明这个变量：
extern 类型  变量名;
extern关键字表示变量在其他文件中声明的，这个
文件只是要使用这个变量。

Makefile可以简化程序的编译过程，使用make命令
读取Makefile文件的内容并执行相应的编译工作。

结构体用来把多个变量合并成一个整体，声明语法
如下：
struct 结构体名 {
    多个变量的声明
};
结构体可以用于作为数据类型声明变量，即可以在
声明结构体的时候立刻声明结构体变量也可以使用
如下语法单独声明变量
struct 结构体名 变量名；

可以使用类似数组初始化的语法对结构体变量
进行初始化。

使用如下语法表示结构体变量中的具体变量
结构体变量名.具体变量名


